@using Common.Client
@using Common.Shared.Auth
@using Oak.I18n
@using IApi = Oak.Api.IApi
@using ATask = Oak.Api.Task.Task
<div class="root col ov-v">
    <div class="flx col ai-stretch g-1">
        <RadzenText Text="yolo"/>
        <RadzenButton IsBusy="_doing" Text="@L.S(S.Delete)"/>
    </div>
</div>

@inject L L;
@inject IApi Api;
@inject NavigationManager Nav;
@code {

    [Parameter]
    [EditorRequired]
    public ATask Task { get; set; }
    private bool _doing;

    private async Task Do()
    {
        _doing = true;
        try
        {
            await Api.Task.Delete(new(Task.Org, Task.Project, Task.Id));
            if (Task.Parent != null)
            {
                Nav.NavigateTo($"/org/{Task.Org}/project/{Task.Project}/task/{Task.Parent}");
            }
            else
            {
                Nav.NavigateTo($"/org/{Task.Org}/projects");
            }
        }
        catch
        {
            // use empty catch to avoid having to
            // call StatHasChanged on errors
        }
        _doing = false;
    }

}
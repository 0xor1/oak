@using Common.Client
@using Common.Shared
@using Common.Shared.Auth
@using Oak.Api.Org
@using IApi = Oak.Api.IApi
@using S = Oak.I18n.S

<div class="root col p-0h g-0h jc-s ai-s">
    <RadzenText class="m-t-0" TextStyle="TextStyle.H2">@L.S(S.OrgMyOrgs)</RadzenText>
    <RadzenButton class="m-b-1" ButtonStyle="ButtonStyle.Success" Icon="add_circle_outline" Text="@L.S(S.New)" Click="@OpenNewDialog"/>
    <RadzenDataGrid
        @ref="_grid"
        Data="Items"
        TItem="Org"
        IsLoading="_isLoading"
        EmptyText="@L.S(S.OrgNoOrgs)"
        EditMode="DataGridEditMode.Single"
        RowClick="RowClick"
        class="row-clickable"
        Style="width: 31em">
        <Columns>
            <RadzenDataGridColumn Width="23em" TItem="Org" Property="Name" Title="@L.S(S.Name)"/>
            <RadzenDataGridColumn Width="7em" TItem="Org" Property="CreatedOn" Title="@L.S(S.CreatedOn)">
                <Template Context="org">
                    @L.D(org.CreatedOn)
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</div>

@inject L L;
@inject IApi Api;
@inject NavigationManager Nav;
@inject DialogService DialogService;
@code{

    [CascadingParameter]
    public ISession Session { get; set; } = default!;

    RadzenDataGrid<Org> _grid = default!;
    List<Org> Items { get; set; } = new ();
    private bool _isLoading = false;

    protected override async Task OnInitializedAsync()
    {
        _isLoading = true;
        try
        {
            Items.AddRange(await Api.Org.Get(new()));
            await _grid.Reload();
        }
        finally
        {
            _isLoading = false;
        }
    }

    private void OpenNewDialog()
    {
        DialogService.Open<OrgNew>(L.S(S.OrgNewOrg));
    }

    private void RowClick(DataGridRowMouseEventArgs<Org> e)
    {
        Nav.NavigateTo($"/org/{e.Data.Id}/projects");
    }

}
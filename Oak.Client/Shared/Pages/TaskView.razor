@using Oak.I18n
@using Common.Client
@using Common.Shared.Auth
@using IApi = Oak.Api.IApi
<div class="root col jc-s ai-stretch">
    @if (_ready)
    {
        <div class="flx row rev jc-e ai-c p-x-0h g-0h ov-a">
            @foreach (var a in Ancestors)
            {
                <RadzenLink Path="@($"/org/{a.Org}/project/{a.Project}/task/{a.Id}")" class="ellip m-y-0h">@a.Name</RadzenLink>
                <span>></span>
            }
        </div>
    }
    else
    {
        @L.S(S.Loading)
    }
    <div class="flx col p-0h g-0h jc-s ai-stretch">
        
    </div>
</div>

@inject L L;
@inject IApi Api;
@inject NavigationManager Nav;
@code{
    [CascadingParameter]
    public ISession Session { get; set; } = default!;
    [Parameter]
    [EditorRequired]
    public string OrgId { get; set; } = "";
    [Parameter]
    [EditorRequired]
    public string ProjectId { get; set; } = "";
    [Parameter]
    [EditorRequired]
    public string TaskId { get; set; } = "";

    private bool _ready;
    private List<Oak.Api.Task.Task> Ancestors { get; set; } = new();
    private Oak.Api.Task.Task Task { get; set; }
    private List<Oak.Api.Task.Task> Children { get; set; } = new();

    
    
    protected override async Task OnInitializedAsync()
    {
        var res = await Api.Task.GetInitView(new (OrgId, ProjectId, TaskId));
        Ancestors.AddRange(res.Ancestors);
        Task = res.Task;
        Children.AddRange(res.Children);
        _ready = true;
    }
}
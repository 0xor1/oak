@using Common.Client
@using Common.Shared
@using Common.Shared.Auth
@using Oak.Api.Org
@using Oak.Api.OrgMember
@using Oak.Api.Project
@using IApi = Oak.Api.IApi
@using S = Oak.I18n.S

<div class="root col p-0h g-0h jc-s ai-s">
    <RadzenText class="m-t-0" TextStyle="TextStyle.H2">@L.S(S.OrgProjects)</RadzenText>
    <RadzenButton class="m-b-1" ButtonStyle="ButtonStyle.Success" Icon="add_circle_outline" Text="@L.S(S.New)" Click="@OpenNewDialog"/>
    <RadzenDataGrid
        @ref="_grid"
        Data="Items"
        TItem="Project"
        IsLoading="_isLoading"
        EmptyText="@L.S(S.OrgNoProjects)"
        RowClick="RowClick"
        class="row-clickable"
        Style="width: 45em">
        <Columns>
            <RadzenDataGridColumn Width="18em" TItem="Project" Property="Name" Title="@L.S(S.Name)"/>
            <RadzenDataGridColumn Width="7em" TItem="Project" Title="@L.S(S.TimeEst)">
                <Template Context="p">
                    @(p.Task.TimeEst)
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Width="7em" TItem="Project" Title="@L.S(S.StartOn)">
                <Template Context="p">
                    @(p.StartOn == null? "--": L.D(p.StartOn.Value))
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Width="7em" TItem="Project" Title="@L.S(S.EndOn)">
                <Template Context="p">
                    @(p.EndOn == null ? "--" : L.D(p.EndOn.Value))
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Width="7em" TItem="Project" Title="@L.S(S.CreatedOn)">
                <Template Context="p">
                    @L.D(p.CreatedOn)
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</div>

@inject L L;
@inject IApi Api;
@inject NavigationManager Nav;
@inject DialogService DialogService;
@code{

    [CascadingParameter]
    public ISession Session { get; set; } = default!;

    [Parameter]
    [EditorRequired]
    public string OrgId { get; set; } = "";

    private Org Org { get; set; } = new("", "", DateTimeExt.UtcNowMilli());
    private OrgMember? OrgMember { get; set; }

    RadzenDataGrid<Project> _grid = default!;
    List<Project> Items { get; set; } = new ();
    private bool _isLoading = false;

    protected override async Task OnInitializedAsync()
    {
        if (Org.Id == string.Empty || Org.Id != OrgId)
        {
            _isLoading = true;
            try
            {
                Org = await Api.Org.GetOne(new(OrgId));
                OrgMember = (await Api.OrgMember.GetOne(new(OrgId, Session.Id))).Item;
                var res = await Api.Project.Get(new(OrgId));
                Items.AddRange(res.Set);
                await _grid.Reload();
            }
            finally
            {
                _isLoading = false;
            }
        }
    }

    private void OpenNewDialog()
    {
        DialogService.Open<ProjectNew>(L.S(S.OrgNewProject), new (){{"OrgId", OrgId}, {"Session", Session}});
    }

    private void RowClick(DataGridRowMouseEventArgs<Project> e)
    {
        Nav.NavigateTo($"/org/{OrgId}/project/{e.Data.Id}/task/{e.Data.Id}");
    }

}
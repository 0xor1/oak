<div class="root">
    <RadzenLayout class="rz-shadow-3 fill">
        <RadzenHeader class="flx jc-sb">
            <RadzenSidebarToggle class="flx jc-c ai-c sq-4t" Click="@(() => _leftExpanded = !_leftExpanded)" />
            <RadzenProfileMenu class="m-t-0t">
                <Template>
                    <RadzenIcon Icon="account_circle" IconStyle="@(_session.IsAuthed? IconStyle.Success: IconStyle.Danger)"></RadzenIcon>
                </Template>
                <ChildContent>
                    @if (_session.IsAuthed)
                    {
                        <RadzenProfileMenuItem Text="@L.S(S.SignOut)" Path="sign_out" Icon="account_circle"></RadzenProfileMenuItem>
                    }
                    else
                    {
                        <RadzenProfileMenuItem Text="@L.S(S.SignIn)" Path="sign_in" Icon="account_circle"></RadzenProfileMenuItem>
                    }
                    <RadzenProfileMenuItem Text="@L.S(S.L10n)" Path="l10n" Icon="translate"></RadzenProfileMenuItem>
                    @if (_session.IsAuthed)
                    {
                        // manually build a custom nav menu item to have full
                        // control over the content
                        <li class="rz-navigation-item" onclick="@ToggleLiveUI" title="@L.S(S.ToggleLiveUpdates)">
                            <div class="rz-navigation-item-wrapper">
                                <div class="rz-navigation-item-link">
                                    @if (_session.FcmEnabled)
                                        {
                                            <i class="rzi rz-navigation-item-icon rz-color-success">monitor_heart</i>
                                            <span class="rz-navigation-item-text">
                                                @L.S(S.Live) <strong class="rz-color-success">@L.S(S.On)</strong>
                                            </span>
                                        }
                                        else
                                        {
                                            <i class="rzi rz-navigation-item-icon rz-color-danger">monitor_heart</i>
                                            <span class="rz-navigation-item-text">
                                                @L.S(S.Live) <strong class="rz-color-danger">@L.S(S.Off)</strong>
                                            </span>
                                        }
                                </div>
                            </div>
                        </li>
                    }
                </ChildContent>
            </RadzenProfileMenu>
        </RadzenHeader>
        <RadzenSidebar @bind-Expanded="@_leftExpanded">
            <RadzenPanelMenu>
                @if (_session.IsAnon)
                {
                    <RadzenPanelMenuItem Text="@L.S(S.Home)" Icon="home" Path="/"/>
                }
                else
                {
                    <RadzenPanelMenuItem Text="@L.S(S.OrgMyOrgs)" Icon="home" Path="/my_orgs"/>
                    <RadzenPanelMenuItem Text="@L.S(S.Display)" Icon="visibility">
                        <RadzenPanelMenuItem class="display-none"/>
                        <div class="flx col p-0t p-l-3h g-0t">
                            <div class="flx g-0h">
                                <RadzenCheckBox Name="Time" TValue="bool" @bind-Value="UIDisplay.Time"/>
                                <RadzenLabel Component="Time">@L.S(S.Time)</RadzenLabel>
                            </div>
                            <div class="flx g-0h">
                                <RadzenCheckBox Name="Cost" TValue="bool" @bind-Value="UIDisplay.Cost"/>
                                <RadzenLabel Component="Cost">@L.S(S.Cost)</RadzenLabel>
                            </div>
                            <div class="flx g-0h">
                                <RadzenCheckBox Name="File" TValue="bool" @bind-Value="UIDisplay.File"/>
                                <RadzenLabel Component="File">@L.S(S.File)</RadzenLabel>
                            </div>
                        </div>
                    </RadzenPanelMenuItem>
                }
            </RadzenPanelMenu>
        </RadzenSidebar>
        <RadzenBody class="root rz-background-color-base-100">
            <CascadingValue Value="@_session">
                @if (_ready)
                {
                    @Body
                }
                else
                {
                    <p>@L.S(S.Loading)</p>
                }
            </CascadingValue>
        </RadzenBody>
        <RadzenNotification/>
        <RadzenDialog/>
    </RadzenLayout>
</div>

@using Oak.I18n
@using Common.Client
@using Common.Shared.Auth
@using Oak.Client.Lib
@inherits LayoutComponentBase
@inject IAuthService Auth;
@inject UIDisplay UIDisplay;
@inject L L;
@implements IDisposable;
@code{

    private bool _leftExpanded;
    private ISession _session = Session.Default(S.DefaultLang, S.DefaultDateFmt, S.DefaultTimeFmt);
    private bool _ready;
    private IDisposable? _eventReg;
    
    protected override async Task OnInitializedAsync()
    {
        Auth.RegisterRefreshUi(AuthStateChanged);
        AuthStateChanged(await Auth.GetSession());
        _ready = true;
    }

    private void AuthStateChanged(ISession s)
    {
        _session = s;
        StateHasChanged();
    }

    private async void ToggleLiveUI()
    {
        await Auth.FcmEnabled(!_session.FcmEnabled);
    }

    public void Dispose()
    {
        _eventReg?.Dispose();
    }

}